apply plugin: 'maven-publish'
apply plugin: 'signing'

task javadocsJar(type: Jar) {
    classifier = 'javadoc'
}

publishing {
    publications.all {
        artifact javadocsJar

        pom {
            description = ""
            name = "${project.name}"
            url = "https://git.inmo.dev/InsanusMokrassar/MicroUtils_mirror"

            scm {
                developerConnection = "scm:git:[fetch=]ssh://git@git.inmo.dev:8322/InsanusMokrassar/MicroUtils_mirror.git[push=]ssh://git@git.inmo.dev:8322/InsanusMokrassar/MicroUtils_mirror.git"
                url = "ssh://git@git.inmo.dev:8322/InsanusMokrassar/MicroUtils_mirror.git"
            }

            developers {
                
                    developer {
                        id = "InsanusMokrassar"
                        name = "Aleksei Ovsiannikov"
                        email = "ovsyannikov.alexey95@gmail.com"
                    }
                

                    developer {
                        id = "000Sanya"
                        name = "Syrov Aleksandr"
                        email = "000sanya.000sanya@gmail.com"
                    }
                
            }

            licenses {
                
                    license {
                        name = "Apache Software License 2.0"
                        url = "https://git.inmo.dev/InsanusMokrassar/MicroUtils_mirror/src/master/LICENSE"
                    }
                
            }
        }
        
        repositories {
            maven {
                name = "bintray"
                url = uri("https://api.bintray.com/maven/${project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')}/MicroUtils/${project.name}/;publish=1;override=1")
                credentials {
                    username = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
                    password = project.hasProperty('BINTRAY_KEY') ? project.property('BINTRAY_KEY') : System.getenv('BINTRAY_KEY')
                }
            }
        }
        
    }
}

signing {
    useGpgCmd()
    publishing.publications.forEach { sign it }
}
